//////////////////////////////////////////////////////////////////////////////
// 
// Ficha Prática 7 - Comunicação I2C (One Master-Multiple Slave)
// 
// SLAVE A
//
// Pinos I2C no Arduino Uno:
//  - SDA: pino A4
//	- SCL: pino A5
//	- GND: Não esquecer de ligar o sinal de ground, entre os diversos dispositivos
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////
// Ficha Prática 7: Parte2 4.I2C (Inter-Integrated Circuit) - Exercícios
//////////////////////////////////////////////////////////

/////////////////////////////////////////////////
// Eduardo Miguel Moreira Junqueira nº30241 ERSC 
/////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Ficha Prática nº7 -Exercícios Link Trinkercad https://www.tinkercad.com/things/cUcGV0vEw8g-fp7ex2/editel?returnTo=https%3A%2F%2Fwww.tinkercad.com%2Fdashboard%2Fdesigns%2Fcircuits&sharecode=7YAWn6Q-oKON3vvgN62PjEWQfREBrJp5e1JobzOlq6o
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//Exercício 2 tudo 
//Exercício 2 Pretende-se implementar um sistema composto por um Master e dois
//Slaves que permita a troca de mensagens utilizando o protocolo I2C.
//////////////////////////////////////////////////////////////////////////////

#include <Wire.h>


#define SLAVE_A 0x03

void setup() {
  Serial.begin(9600);
  Serial.println("SLAVE A");
  Wire.begin(SLAVE_A); // Inicializa o módulo de hardware i2c como SLAVE com o endereço SLAVE_A
  Wire.onRequest(requestEvent);//Regista o evento de request
  Wire.onReceive(receiveEvent);//Regista o evento de receive
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);
}

void loop() {
//Lop vazio, por enquanto
}

// requestEvent Handler that executes whenever data is requested by master
void requestEvent() {
  Wire.write("SLAVE_A > MASTER\n");//Responde ao Master
}

// receiveEvent Handler that executes whenever data is received from the master
void receiveEvent(int numBytes) {
  digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));//Alterna o estado do LED
  while (Wire.available()) {
    char c = Wire.read(); //Lê os dados recebidos
    Serial.print(c); //Exibe os dados no monitor serial
  }
}